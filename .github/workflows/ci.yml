name: Kotlin Corda Smart Contract CI

on:
  push:
    branches:
      - main  # Trigger for changes in the main branch (adjust as needed)
  pull_request:
    branches:
      - main  # Trigger for pull requests targeting the main branch
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest  # You can choose other OS like windows-latest or macos-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK 17 for Kotlin and Corda
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Cache Gradle dependencies (to speed up builds)
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 4: Build the project using Gradle
      #- name: Build with Gradle
      #  run: ./gradlew build --stacktrace

      # Step 5: Run tests with Gradle
      #- name: Run tests
      #  run: ./gradlew test --stacktrace

      # Step 6: Optional - Upload build artifacts or generate reports
      # For example, if you want to upload test results as artifacts:
      #- name: Upload test results
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: test-results
      #    path: build/test-results

      # Optional: Add additional steps like code coverage, linting, etc.

